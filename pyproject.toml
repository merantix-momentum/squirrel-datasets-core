[tool.poetry]
name = "squirrel-datasets-core"
version = "0.3.1"
description = "Squirrel public datasets collection"
authors = ["Merantix Momentum"]
license = "Apache 2.0"
readme = "README.md"
packages = [{include = "squirrel_datasets_core", from = "src"}]
homepage = "https://merantix-momentum.com/technology/squirrel/"
repository = "https://github.com/merantix-momentum/squirrel-datasets-core"
documentation = "https://squirrel-datasets-core.readthedocs.io/en/latest/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Typing :: Typed",
]

[tool.poetry.plugins."squirrel"]
"squirrel_datasets_core" = "squirrel_datasets_core.squirrel_plugin"

[tool.poetry.dependencies]
python = "^3.8"
docutils = "^0.17.1"
fire = "^0.4.0"
pillow = "^9.4.0"
scipy = "^1.9.3"
squirrel-core = {extras = ["gcp", "zarr"], version = "^0.19.0"}
deeplake = {version = "^3.2.7", optional = true}
hub = {version = "^3.0.1", optional = true}
datasets = {version = "^2.9.0", optional = true}
pyspark = {version = "^3.3.2", optional = true}
torchvision = {version = "^0.14.1", optional = true}

[tool.poetry.group.dev.dependencies]
twine = "^4.0.2"
wheel = "^0.38.4"
pytest = "^6.2.1"
pytest-timeout = "^2.1.0"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.2.0"
flaky = "^3.7.0"
nbmake = "^1.4.1"
notebook = "^6.4.12"
jupyter = "^1.0.0"
networkx = "^3.0"
pre-commit = "2.16.0"
pip-tools = "^6.12.2"
black = "22.3.0"
autopep8 = "1.5.4"

[tool.poetry.group.doc.dependencies]
jinja2 = "<3.1"
sphinx = "<4.0.0"
sphinx-versions = "^1.1.3"
sphinx-rtd-theme = "^1.2.0"
sphinx-autoapi = "^1.9.0"
sphinxcontrib-mermaid = "^0.8"
myst-parser = "^0.17.2"

[tool.poetry.extras]
deeplake = ["deeplake"]
hub = ["hub"]
huggingface = ["datasets"]
preprocessing = ["pyspark"]
torchvision = ["torchvision"]
all = ["deeplake", "hub", "datasets", "pyspark", "torchvision"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.autopep8]
max_line_length = 120
ignore="E265,E501,E203"
in-place = true
recursive = true

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = [
    "test",
]
addopts = "-p no:warnings -v --cov=squirrel_datasets_core --cov-config=.coveragerc"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
]
marks = "serial: Tests that should be run sequentially without any tests running in parallel."
